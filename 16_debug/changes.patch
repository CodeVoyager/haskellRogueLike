Common subdirectories: ../15_memory/src/Data and ./src/Data
diff -w -B -a -d -u -b --new-file ../15_memory/src/GameCore.hs ./src/GameCore.hs
--- ../15_memory/src/GameCore.hs	2018-03-04 09:15:50.420964801 +0200
+++ ./src/GameCore.hs	2018-03-04 10:57:56.802067493 +0200
@@ -54,6 +54,9 @@
 
                    -- | The actor's memory about positions
                    , _acPosMemory :: !(M.Memory WorldPos)
+
+                   -- | Player's properties
+                   , _acProps :: !(Map Text Text)
                    }
 
 data Player = Player { _plConn :: !Host.Connection
@@ -94,6 +97,8 @@
 
 data RogueAction = ActMovePlayer (Int, Int)
                  | ActSetPlayerViewPortStyle ViewPortStyle
+                 | ActTogglePlayerProp Text Text
+
 
 data ViewPortStyle = ViewPortCentre
                    | ViewPortLock PlayerPos
diff -w -B -a -d -u -b --new-file ../15_memory/src/GameEngine.hs ./src/GameEngine.hs
--- ../15_memory/src/GameEngine.hs	2018-03-04 10:30:29.663042181 +0200
+++ ./src/GameEngine.hs	2018-03-04 11:25:09.679477906 +0200
@@ -140,6 +140,8 @@
                                        , ("shift+v p", "Game:ViewPort:Snap")
                                        , ("shift+v b", "Game:ViewPort:Border")
                                        , ("shift+v l", "Game:ViewPort:Lock")
+
+                                       , ("shift+d d", "Debug:Light:Toggle")
                                        ]
              , _cfgMinMaxBounds = (-300, 300, -300, 300)
              }
@@ -168,6 +170,7 @@
             , _acUtilities = []
             , _acDisposition = UB.emptyDisposition
             , _acPosMemory = M.empty
+            , _acProps = Map.empty
             }
 
     mkEnemyActor aid e (x, y) =
@@ -185,6 +188,7 @@
             , _acUtilities = []
             , _acDisposition = UB.emptyDisposition 
             , _acPosMemory = M.empty
+            , _acProps = Map.empty
             }
     
 
@@ -434,6 +438,8 @@
     "Game:ViewPort:Border" -> [ActSetPlayerViewPortStyle $ ViewPortBorder 2]
     "Game:ViewPort:Lock"   -> [ActSetPlayerViewPortStyle $ ViewPortLock (worldCoordToPlayer topLeft $ actor ^. acWorldPos)]
 
+    "Debug:Light:Toggle" -> [ActTogglePlayerProp "debug:light" "on"]
+
     _ -> []
 handleKey _ _ = []
 
@@ -452,6 +458,13 @@
     ActSetPlayerViewPortStyle style ->
       world & (wdPlayer . plViewPortStyle) .~ style
 
+    ActTogglePlayerProp prop valEnabled ->
+      world & (wdPlayer . plActor . acProps) %~ Map.alter (toggleMapProp valEnabled) prop
+
+  where
+    toggleMapProp v Nothing = Just v
+    toggleMapProp _ (Just _) = Nothing
+
 
 tryMoveActor :: World -> Actor -> (Int, Int) -> Maybe World
 tryMoveActor world actor (dx, dy) =
@@ -654,6 +667,8 @@
   
 darknessFovOverlay :: Player -> Actor -> Map PlayerPos Tile
 darknessFovOverlay player actor =
+  case player ^. plActor ^. acProps ^.at "debug:light" of
+    Nothing ->
   let
     (screenWidth, screenHeight) = player ^. plScreenSize
 
@@ -670,6 +685,9 @@
   --  I.e. any position in the field of view, or previously in the field of view
   foldr Map.delete blackBg $ lightAt <> seen
 
+    Just _ ->
+      Map.empty
+
   
 flatFov :: Maybe [(WorldPos, [WorldPos])] -> [WorldPos]
 flatFov Nothing = []
--- ../15_memory/html/rogue.js	2018-03-04 08:48:25.416881367 +0200
+++ ./html/rogue.js	2018-03-04 11:12:33.371901035 +0200
@@ -59,6 +59,7 @@
   Mousetrap.pause();
 
   const act = () => {
+    console.log( "key: " + k );
     sendCmd("key", k);
   };
   
